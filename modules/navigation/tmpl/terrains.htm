<!-- BEGIN: icone -->
<img src="{path_module}/img/icn48_titre.png" alt="" border=0 />
<!-- END: icone -->

<!-- BEGIN: infos -->
{aff_menu}
<!-- END: infos -->


<!-- BEGIN: corps -->

<link rel="stylesheet" href="/core/external/leaflet/leaflet.css" crossorigin=""/>
<script type="text/javascript" src="/core/external/leaflet/leaflet.js"></script>


<!-- BEGIN: listeVols -->
<div class="row">
	<div class="grid-margin stretch-card">
		<div class="card">
			<div class="card-body">	
				{form_lstuser}
			</div>
		</div>
	</div>
</div>
<!-- END: listeVols -->



<div class="row">
	<div class="grid-margin stretch-card">
		<div class="card">
			<div class="card-body">
				<div id="statusmap" style="width:100%; min-height:600px;"></div>
			</div>
		</div>
	</div>
</div>


<div class="row">
	<div class="grid-margin stretch-card">
		<div class="card">
			<div class="card-body">
			{tab_liste}
			</div>
		</div>
	</div>
</div>

<script>

	var coordinates = [{map_lat}, {map_lon}];
	var markerRed=L.layerGroup();
	var markerYellow=L.layerGroup();
	var markerGreen=L.layerGroup();

	var osm=L.tileLayer('{tileLayer_url}', {
			maxZoom: 20,
			attribution: 'Easyaero'
		});

	var mapOptions = {
		center: coordinates,
		zoom: 7,
		zoomControl: true,
		editable: false,
		printable: true,
		downloadable: false,
		layers:[osm, markerRed,markerYellow,markerGreen]
	}

	var greenIcon = L.icon({
		iconUrl: '/static/images/marker_green.png',
		shadowUrl: '/static/images/marker_grey.png',

		iconSize:     [48, 48], // size of the icon
		shadowSize:   [50, 64], // size of the shadow
		iconAnchor:   [0, 48], // point of the icon which will correspond to marker's location
		shadowAnchor: [4, 62],  // the same for the shadow
		popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
	});
	var yellowIcon = L.icon({
		iconUrl: '/static/images/marker_yellow.png',
		shadowUrl: '/static/images/marker_grey.png',

		iconSize:     [48, 48], // size of the icon
		shadowSize:   [50, 64], // size of the shadow
		iconAnchor:   [0, 48], // point of the icon which will correspond to marker's location
		shadowAnchor: [4, 62],  // the same for the shadow
		popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
	});
	var redIcon = L.icon({
		iconUrl: '/static/images/marker_red.png',
		shadowUrl: '/static/images/marker_grey.png',

		iconSize:     [48, 48], // size of the icon
		shadowSize:   [50, 64], // size of the shadow
		iconAnchor:   [0, 48], // point of the icon which will correspond to marker's location
		shadowAnchor: [4, 62],  // the same for the shadow
		popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
	});

	$(document).ready(function() { 
		mymap = L.map('statusmap',mapOptions);

		$.get('/api/v1/navigation/terrains').done(function(data)
		{
			for (var key in data.data)
			{
				if ((data.data[key].latitude!=null) && (data.data[key].longitude!=null))
				{
					var marker = L.marker([data.data[key].latitude, data.data[key].longitude]).addTo(markerRed);
				}
			}
		});

	});



</script>

<!-- END: corps -->
